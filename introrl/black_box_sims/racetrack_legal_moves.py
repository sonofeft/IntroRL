#!/usr/bin/env python
# -*- coding: ascii -*-
from __future__ import print_function
from __future__ import unicode_literals
from future import standard_library
standard_library.install_aliases()
from builtins import str
from builtins import range
from builtins import object


legal_moveD = {} # index=(vx,vy), value=list of legal actions (e.g. [(0,0), (1,1), ...]
legal_moveD[(0,0)] = ( (0,1),(0,2),(0,3),(0,4),(1,0),(1,1),(1,2),(1,3),(1,4),(2,0),(2,1),(2,2),(2,3),(2,4),(3,0),(3,1),(3,2),(3,3),(3,4),(4,0),(4,1),(4,2),(4,3),(4,4) )
#legal_moveD[(0,0)] = ( (1,0),(1,1),(1,2),(1,3),(1,4),(2,0),(2,1),(2,2),(2,3),(2,4),(3,0),(3,1),(3,2),(3,3),(3,4),(4,0),(4,1),(4,2),(4,3),(4,4) )

legal_moveD[(0,1)] = ( (0,0),(0,1),(0,2),(0,3),(1,-1),(1,0),(1,1),(1,2),(1,3),(2,-1),(2,0),(2,1),(2,2),(2,3),(3,-1),(3,0),(3,1),(3,2),(3,3),(4,-1),(4,0),(4,1),(4,2),(4,3) )
legal_moveD[(0,2)] = ( (0,-1),(0,0),(0,1),(0,2),(1,-2),(1,-1),(1,0),(1,1),(1,2),(2,-2),(2,-1),(2,0),(2,1),(2,2),(3,-2),(3,-1),(3,0),(3,1),(3,2),(4,-2),(4,-1),(4,0),(4,1),(4,2) )
legal_moveD[(0,3)] = ( (0,-2),(0,-1),(0,0),(0,1),(1,-3),(1,-2),(1,-1),(1,0),(1,1),(2,-3),(2,-2),(2,-1),(2,0),(2,1),(3,-3),(3,-2),(3,-1),(3,0),(3,1),(4,-3),(4,-2),(4,-1),(4,0),(4,1) )
legal_moveD[(0,4)] = ( (0,-3),(0,-2),(0,-1),(0,0),(1,-4),(1,-3),(1,-2),(1,-1),(1,0),(2,-4),(2,-3),(2,-2),(2,-1),(2,0),(3,-4),(3,-3),(3,-2),(3,-1),(3,0),(4,-4),(4,-3),(4,-2),(4,-1),(4,0) )
legal_moveD[(1,0)] = ( (-1,1),(-1,2),(-1,3),(-1,4),(0,0),(0,1),(0,2),(0,3),(0,4),(1,0),(1,1),(1,2),(1,3),(1,4),(2,0),(2,1),(2,2),(2,3),(2,4),(3,0),(3,1),(3,2),(3,3),(3,4) )
legal_moveD[(1,1)] = ( (-1,0),(-1,1),(-1,2),(-1,3),(0,-1),(0,0),(0,1),(0,2),(0,3),(1,-1),(1,0),(1,1),(1,2),(1,3),(2,-1),(2,0),(2,1),(2,2),(2,3),(3,-1),(3,0),(3,1),(3,2),(3,3) )
legal_moveD[(1,2)] = ( (-1,-1),(-1,0),(-1,1),(-1,2),(0,-2),(0,-1),(0,0),(0,1),(0,2),(1,-2),(1,-1),(1,0),(1,1),(1,2),(2,-2),(2,-1),(2,0),(2,1),(2,2),(3,-2),(3,-1),(3,0),(3,1),(3,2) )
legal_moveD[(1,3)] = ( (-1,-2),(-1,-1),(-1,0),(-1,1),(0,-3),(0,-2),(0,-1),(0,0),(0,1),(1,-3),(1,-2),(1,-1),(1,0),(1,1),(2,-3),(2,-2),(2,-1),(2,0),(2,1),(3,-3),(3,-2),(3,-1),(3,0),(3,1) )
legal_moveD[(1,4)] = ( (-1,-3),(-1,-2),(-1,-1),(-1,0),(0,-4),(0,-3),(0,-2),(0,-1),(0,0),(1,-4),(1,-3),(1,-2),(1,-1),(1,0),(2,-4),(2,-3),(2,-2),(2,-1),(2,0),(3,-4),(3,-3),(3,-2),(3,-1),(3,0) )
legal_moveD[(2,0)] = ( (-2,1),(-2,2),(-2,3),(-2,4),(-1,0),(-1,1),(-1,2),(-1,3),(-1,4),(0,0),(0,1),(0,2),(0,3),(0,4),(1,0),(1,1),(1,2),(1,3),(1,4),(2,0),(2,1),(2,2),(2,3),(2,4) )
legal_moveD[(2,1)] = ( (-2,0),(-2,1),(-2,2),(-2,3),(-1,-1),(-1,0),(-1,1),(-1,2),(-1,3),(0,-1),(0,0),(0,1),(0,2),(0,3),(1,-1),(1,0),(1,1),(1,2),(1,3),(2,-1),(2,0),(2,1),(2,2),(2,3) )
legal_moveD[(2,2)] = ( (-2,-1),(-2,0),(-2,1),(-2,2),(-1,-2),(-1,-1),(-1,0),(-1,1),(-1,2),(0,-2),(0,-1),(0,0),(0,1),(0,2),(1,-2),(1,-1),(1,0),(1,1),(1,2),(2,-2),(2,-1),(2,0),(2,1),(2,2) )
legal_moveD[(2,3)] = ( (-2,-2),(-2,-1),(-2,0),(-2,1),(-1,-3),(-1,-2),(-1,-1),(-1,0),(-1,1),(0,-3),(0,-2),(0,-1),(0,0),(0,1),(1,-3),(1,-2),(1,-1),(1,0),(1,1),(2,-3),(2,-2),(2,-1),(2,0),(2,1) )
legal_moveD[(2,4)] = ( (-2,-3),(-2,-2),(-2,-1),(-2,0),(-1,-4),(-1,-3),(-1,-2),(-1,-1),(-1,0),(0,-4),(0,-3),(0,-2),(0,-1),(0,0),(1,-4),(1,-3),(1,-2),(1,-1),(1,0),(2,-4),(2,-3),(2,-2),(2,-1),(2,0) )
legal_moveD[(3,0)] = ( (-3,1),(-3,2),(-3,3),(-3,4),(-2,0),(-2,1),(-2,2),(-2,3),(-2,4),(-1,0),(-1,1),(-1,2),(-1,3),(-1,4),(0,0),(0,1),(0,2),(0,3),(0,4),(1,0),(1,1),(1,2),(1,3),(1,4) )
legal_moveD[(3,1)] = ( (-3,0),(-3,1),(-3,2),(-3,3),(-2,-1),(-2,0),(-2,1),(-2,2),(-2,3),(-1,-1),(-1,0),(-1,1),(-1,2),(-1,3),(0,-1),(0,0),(0,1),(0,2),(0,3),(1,-1),(1,0),(1,1),(1,2),(1,3) )
legal_moveD[(3,2)] = ( (-3,-1),(-3,0),(-3,1),(-3,2),(-2,-2),(-2,-1),(-2,0),(-2,1),(-2,2),(-1,-2),(-1,-1),(-1,0),(-1,1),(-1,2),(0,-2),(0,-1),(0,0),(0,1),(0,2),(1,-2),(1,-1),(1,0),(1,1),(1,2) )
legal_moveD[(3,3)] = ( (-3,-2),(-3,-1),(-3,0),(-3,1),(-2,-3),(-2,-2),(-2,-1),(-2,0),(-2,1),(-1,-3),(-1,-2),(-1,-1),(-1,0),(-1,1),(0,-3),(0,-2),(0,-1),(0,0),(0,1),(1,-3),(1,-2),(1,-1),(1,0),(1,1) )
legal_moveD[(3,4)] = ( (-3,-3),(-3,-2),(-3,-1),(-3,0),(-2,-4),(-2,-3),(-2,-2),(-2,-1),(-2,0),(-1,-4),(-1,-3),(-1,-2),(-1,-1),(-1,0),(0,-4),(0,-3),(0,-2),(0,-1),(0,0),(1,-4),(1,-3),(1,-2),(1,-1),(1,0) )
legal_moveD[(4,0)] = ( (-4,1),(-4,2),(-4,3),(-4,4),(-3,0),(-3,1),(-3,2),(-3,3),(-3,4),(-2,0),(-2,1),(-2,2),(-2,3),(-2,4),(-1,0),(-1,1),(-1,2),(-1,3),(-1,4),(0,0),(0,1),(0,2),(0,3),(0,4) )
legal_moveD[(4,1)] = ( (-4,0),(-4,1),(-4,2),(-4,3),(-3,-1),(-3,0),(-3,1),(-3,2),(-3,3),(-2,-1),(-2,0),(-2,1),(-2,2),(-2,3),(-1,-1),(-1,0),(-1,1),(-1,2),(-1,3),(0,-1),(0,0),(0,1),(0,2),(0,3) )
legal_moveD[(4,2)] = ( (-4,-1),(-4,0),(-4,1),(-4,2),(-3,-2),(-3,-1),(-3,0),(-3,1),(-3,2),(-2,-2),(-2,-1),(-2,0),(-2,1),(-2,2),(-1,-2),(-1,-1),(-1,0),(-1,1),(-1,2),(0,-2),(0,-1),(0,0),(0,1),(0,2) )
legal_moveD[(4,3)] = ( (-4,-2),(-4,-1),(-4,0),(-4,1),(-3,-3),(-3,-2),(-3,-1),(-3,0),(-3,1),(-2,-3),(-2,-2),(-2,-1),(-2,0),(-2,1),(-1,-3),(-1,-2),(-1,-1),(-1,0),(-1,1),(0,-3),(0,-2),(0,-1),(0,0),(0,1) )
legal_moveD[(4,4)] = ( (-4,-3),(-4,-2),(-4,-1),(-4,0),(-3,-4),(-3,-3),(-3,-2),(-3,-1),(-3,0),(-2,-4),(-2,-3),(-2,-2),(-2,-1),(-2,0),(-1,-4),(-1,-3),(-1,-2),(-1,-1),(-1,0),(0,-4),(0,-3),(0,-2),(0,-1),(0,0) )

if __name__=="__main__":
    
    for vx in range(5):
        for vy in range(5):
            moveL = []
            print('legal_moveD[(%i,%i)] = '%(vx,vy), end='')
            for i in range(-4,5):
                newvx = vx + i
                if newvx >= 0 and newvx<=4:
                    for j in range(-4,5):
                        newvy = vy + j
                        if newvy >= 0  and newvy<=4:
                            if (newvx,newvy) != (0,0):
                                moveL.append( '(%i,%i)'%(i,j) )
            print( '(', ','.join(moveL), ')'  )
            